pipeline {
    agent {
        dockerContainer {
            image 'python:3.13-slim'
            args '-v /var/run/docker.sock:/var/run/docker.sock --privileged'
        }
    }

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
        IMAGE_NAME = "tselotmillion/messaging_app"
        BRANCH_NAME = "main"
    }

    stages {
        stage('Setup Environment') {
            steps {
                sh '''
                    python3 --version
                    pip install --upgrade pip
                    pip install -r messaging_app/requirements.txt
                    docker --version
                '''
            }
        }

        stage('Checkout') {
            steps {
                git branch: "${BRANCH_NAME}",
                    url: 'https://github.com/Tselot8/alx-backend-python.git',
                    credentialsId: 'github-alx-backend'
            }
        }

        stage('Run Tests') {
            steps {
                sh 'python3 -m pytest --junitxml=results.xml || true'
                junit 'results.xml'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${IMAGE_NAME}:latest messaging_app/"
            }
        }

        stage('Push Docker Image') {
            steps {
                sh "echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin"
                sh "docker push ${IMAGE_NAME}:latest"
            }
        }
    }
}
